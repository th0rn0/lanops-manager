version: '3.9'

services:
  nginx:
    build:
      context: .
      dockerfile: resources/docker/nginx/Dockerfile
    ports:
      - '8080:80'
    volumes:
      - ./src:/var/www/html
      - ./resources/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal
      
  php:
    build:
      context: .
      dockerfile: resources/docker/php/Dockerfile
      target: php-base
    volumes:
      - ./src:/var/www/html
    env_file: $PWD/src/.env
    user: "1000"
    networks:
      - internal
    extra_hosts:
        - "host.docker.internal:host-gateway"

  db:
    image: mariadb:10.11
    volumes:
      - db:/var/lib/mysql
    env_file: $PWD/src/.env
    ports:
      - 3306:3306
    networks:
      - internal

  composer:
    build:
      context: .
      dockerfile: resources/docker/php/Dockerfile
      target: php-composer
    entrypoint: [ "composer" ]
    command: [ "--version" ]
    user: "1000"
    volumes:
      - ./src:/var/www/html

  npm:
    image: node:8
    # build:
    #   context: .
    #   dockerfile: resources/docker/npm/Dockerfile
    #   target: npm-base
    entrypoint: [ "npm" ]
    working_dir: /app
    command: [ "-v" ]
    user: "1000"
    volumes:
      - ./src:/app

  gulp:
    image: node:8
    # build:
    #   context: .
    #   dockerfile: resources/docker/npm/Dockerfile
    #   target: npm-base
    entrypoint: [ "node_modules/.bin/gulp" ]
    working_dir: /app
    command: [ "-v" ]
    # user: "1000"
    volumes:
      - ./src:/app

  artisan:
    build:
      context: .
      dockerfile: resources/docker/php/Dockerfile
      target: php-base
    entrypoint: [ "php", "artisan" ]
    command: [ "--version" ]
    user: "1000"
    volumes:
      - ./src:/var/www/html
    env_file: $PWD/src/.env
    networks:
      - internal

  queue-worker:
    deploy:
      mode: replicated
      replicas: 5
    restart: always
    build:
      context: .
      dockerfile: resources/docker/php/Dockerfile
      target: php-base
    entrypoint: [ "php", "artisan" ]
    command: [ "queue:work" ]
    user: "1000"
    volumes:
      - ./src:/var/www/html
    env_file: $PWD/src/.env
    networks:
      - internal
    
volumes:
  db:

networks:
  internal:
    driver: bridge
